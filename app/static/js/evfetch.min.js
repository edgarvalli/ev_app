function isArray2D(e){return!!Array.isArray(e)&&e.every(e=>Array.isArray(e))}class LoadinnElement{container=document.getElementById("0");style;messageId="_loading_message";cssId="_loading_style";id="_loading_c";constructor(){this.#a(),this.#b()}#a(){if(document.getElementById(this.cssId))return;let e=`
    .loading-container {
        position: fixed;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        background: rgba(0, 0, 0, .25);
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all .5s;
    }

    .loading-center {
        width: 10%;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .loader {
        width: 48px;
        height: 48px;
        border: 5px solid #FFF;
        border-bottom-color: transparent;
        border-radius: 50%;
        display: inline-block;
        box-sizing: border-box;
        animation: rotation 1s linear infinite;
    }

    .loading-container-hidden {
        z-index: -1;
        background: transparent;
    }

    @media screen and (max-width: 1280px) {
        .loading-center {
            width: 20%;
        }
    }

    @media screen and (max-width: 720px) {
        .loading-center {
            width: 40%;
            display: block;
        }
    }

    @keyframes rotation {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }
`;this.style=document.createElement("style"),this.style.id=this.cssId,this.style.innerHTML=e,document.head.appendChild(this.style)}#b(){if(document.getElementById(this.id))return;this.container=document.createElement("div"),this.container.classList.add("loading-container","loading-container-hidden");let t=window.document.createElement("div");t.classList.add("loading-center"),t.innerHTML=`
    <div style="color: white" id="${this.messageId}"></div>
    <span class="loader"></span>
`,this.container.appendChild(t),this.container.id=this.id,window.document.body.appendChild(this.container)}show(e="Fetching data from server"){window.document.getElementById(this.messageId).innerText=e,this.container.classList.contains("loading-container-hidden")&&this.container.classList.remove("loading-container-hidden")}hide(){this.container.classList.contains("loading-container-hidden")||(this.container.classList.add("loading-container-hidden"),window.document.getElementById(this.id).remove(),window.document.getElementById(this.cssId).remove())}}class EVFetch{loading;constructor(e="http://localhost:5000/api"){this.endpoint=e,this.loading=new LoadinnElement}validateModel(e){return e&&"string"==typeof e?null:{error:!0,message:"Invalid model provided"}}validateData(e){return e&&"object"==typeof e?null:{error:!0,message:"Invalid data provided"}}setHeaders(e="GET",t=null){let i={method:e.toUpperCase(),headers:{"Content-Type":"application/json",Accept:"application/json"}};return t&&"GET"!==i.method&&(i.body=JSON.stringify(t)),i}async request(e,t="GET",i=null){let n=`${this.endpoint}/${e}`;try{this.loading.show();let s=await fetch(n,this.setHeaders(t,i)),a=s.headers.get("Content-Type");if(this.loading.hide(),a&&a.includes("application/json"))return await s.json();return await s.text()}catch(r){return{error:!0,message:r.message||r}}}async search(e,t={}){let i=this.validateModel(e);if(i)return i;let n=`${e}/search`,s=[];if("fields"in t&&"length"in t.where){let a="fields=";"string"==typeof t.fields?a+=t.fields:a+=t.fields.join(","),s.push(a)}if("where"in t&&"length"in t.where){let r="where=";if(isArray2D(t.where)){let d=[];t.where.forEach(e=>{d.push(`(${e.map(e=>`'${e}'`).join(",")})`)}),r+=d=`(${d})`}else r+=`(${t.where.map(e=>`'${e}'`).join(",")})`;s.push(r)}return"limit"in t&&s.push("limit="+t.limit),s.length>0&&(n+=`?${s.join("&")}`),this.request(n)}async save(e,t){let i=this.validateModel(e);return i||(i=this.validateData(t))?i:this.request(`${e}/save`,"POST",t)}async update(e,t,i){let n=this.validateModel(e);return n||(n=this.validateData(t))?n:i?this.request(`${e}/update/${i}`,"PUT",t):{error:!0,message:"Invalid ID provided for update"}}async unlink(e,t){let i=this.validateModel(e);return i||(t?this.request(`${e}/unlink/${t}`,"DELETE"):{error:!0,message:"Invalid ID provided for unlink"})}setEndpoint(e){this.endpoint=e}}